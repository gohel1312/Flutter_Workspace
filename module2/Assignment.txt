B1. What is inheritance? 

Ans=> Inheritance is part of "OOP" , It is concept of base class and derived class.In this Methods and Variable of base class is used by derived class.
Here Five types of Inheritance.
		->Single Inheritance
		->Multiple Inheritance
		->Multiple Inhetitance
		->Hybride Inheritance
		->Hierarchical Inheritance
======================================================
B2. Which inheritance is not supported by Dart? Why? 

Ans=>Multiple Inheritance 
======================================================
B3. What is advantage of inheritance?

Ans=>Using Inheritance define Methods and Variable one time and when we needed it will be called by object.
======================================================
B4. Difference between inheritance and encapsulation.

Ans=>    Inheritance                       Encapsulation
   ->This is concept of Base     ->Encapsulation dictates that one class must not
    class and child class.		 have access to the (private) data of another class.
======================================================
B5. Difference between inheritance and abstraction. 

Ans=>abstraction is type of class,in flutter we can define abstract class,in abstract class we can define and declare method?function.
	It work as interface.
======================================================
B6. Difference between inheritance and polymorphism. 

Ans=>	two types of polymorphism  .Function Overloading and Operator overloading. Flutter can not accept Function Overloading.
======================================================
B7. Can we override static method in Dart?

Ans=> Yes.
======================================================
B8. Can we overload static method in Dart?
 
Ans=> No.
=====================================================
B9. Can a class implement more than one interface?

Ans=> Yes.
====================================================
B10. Can a class extend more than one class in Dart? 

Ans=> No.
===================================================
B11. Can an interface extend more than one interface in Dart?

Ans=> Yes.
===================================================
B12. What will happen if a class implements two interfaces and they both have a method with same name and signature? 

Ans=>	Not Work.(This concept is Method Overloading)
==================================================
B13. Can we pass an object of a subclass to a method expecting an object of the super class? 

Ans=> Yes.
=================================================
B14. Are static members inherited to sub classes? 

Ans=> Yes.
=================================================
B15. What happens if the parent and the child class have a field with same identifier?

Ans=> We use "Super" keyword to use super class identifire.
=================================================
B16. Are constructors and initializers also inherited to sub classes?

Ans=> Yes.
=================================================
B17. How do you restrict a member of a class from inheriting by its sub classes? 

Ans=> By declaring member as a "Private".
=================================================
B18. How do you implement multiple inheritance in Dart? 

Ans=> using "Implements" Key word.
================================================
B19. Can a class extend by itself in Dart? 

Ans=> No.
================================================
B20. How do you override a private method in Dart?

Ans=> Using "Final" keyword.
===============================================
B21. When to overload a method in Dart and when to override it? 

Ans=> Dart does not support Method overloading. Where as Method Overriding is support by dart and in this base class is extend by all other sub class.
==============================================
B22. What is the order of extends and implements keyword on Dart class declaration? 

Ans=> Class Base_class_name extends super_class_name implements Abstract_class_name.
==============================================
B23. How do you prevent overriding a Dart method without using the final modifier?

Ans=> Using a static method
Using private access modifier
Using default access modifier
Using the final keyword method
=============================================
B24. What are the rules of method overriding in Dart?

Ans=> All sub class will be extend only one base class.
base class and child class method name will be same.
=============================================
B25. Difference between method overriding and overloading in Dart. 

Ans=>Overriding occurs when the method signature is the same in the superclass and the child class. 
Overloading occurs when two or more methods in the same class have the same name but different parameters.

============================================
B26. What happens when a class implements two interfaces and both declare field (variable) with same name?

Ans=>If both interfaces have a method of exactly the same name and signature,
 the implementing class can implement both interface methods with a single concrete method.
===========================================
B27. Can a subclass instance method override a superclass static method?

Ans=>
===========================================
B28. Can a subclass static method hide superclass instance method? 

Ans=> If a subclass defines a static method with the same signature as a static method in the superclass, then the method in the-
subclass hides the one in the superclass.
==========================================
B29. Can a superclass access subclass member? 

Ans=> No.
=========================================
B30. Difference between object oriented and object based language.

Ans=> Object-oriented languages do not have the inbuilt objects whereas Object-based languages have the inbuilt objects.
=========================================
B31. Explain Diamond problem.

Ans=> The "diamond problem" (sometimes referred to as the "Deadly Diamond of Death") -
is an ambiguity that arises when two classes B and C inherit from A, and class D inherits from both B and C.
=============================================
B32. Why Dart does not support operator overloading?

Ans=> In Dart same name of method is not allow.
============================================
B33. What is Encapsulation in Dart? 

Ans=> Encapsulation means, binding data and functions that use data into one unit.
==============================================
B34. Which of the Dart OOPS feature promotes access protection or data hiding?

Ans=> Encapsulation.

